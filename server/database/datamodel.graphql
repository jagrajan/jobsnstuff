type User {
  id: ID! @unique
  username: String! @unique
  email: String! @unique
  password: String!
  role: Role!
  activated: Boolean!
  userprofile: UserProfile @relation(name: "UserProfileDetails" onDelete: CASCADE)
  businessprofile: BusinessProfile @relation(name: "BusinessProfileDetails" onDelete: CASCADE)
  files: [File!]! @relation(name: "UserFiles" onDelete: CASCADE)
}

type UserProfile {
  id: ID! @unique
  firstname: String
  lastname: String
  preferredname: String
  phonenumber: String
  user: User! @unique @relation(name: "UserProfileDetails" onDelete: CASCADE)
  applications: [Application!]!
}

type BusinessProfile {
  id: ID! @unique
  name: String
  description: String
  phonenumber: String
  address: String
  website: String
  user: User! @unique @relation(name: "BusinessProfileDetails" onDelete: CASCADE)
  jobpostings: [JobPosting!]!
}

type File {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  mimetype: String!
  path: String! @unique
  name: String
  filetype: Filetype!
  storedName: String!
  size: Float!
  user: User! @unique @relation(name: "UserFiles")
}

enum Role {
  ADMIN
  BASEUSER
  BUSINESS
}

enum Filetype {
  RESUME
  COVERLETTER
  TRANSCRIPT
  PROFILEIMAGE
  OTHER
}

type Location {
  id: ID! @unique
  streetaddress: String!
  city: String!
  province: String!
  country: String!
  postalcode: String!
}

type JobPosting {
  id: ID! @unique
  title: String!
  type: String
  duration: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  location: Location
  openings: String
  description: String
  contactname: String
  salary: String
  deadline: DateTime
  applications: [Application!]!
}

enum StatusType {
  PENDING
  ACCEPTED
  REJECTED
}

type Application {
  id: ID! @unique
  status: StatusType!
  user: UserProfile!
  jobposting: JobPosting!
}
