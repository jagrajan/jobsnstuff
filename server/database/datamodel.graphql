type User {
  id: ID! @unique
  username: String! @unique
  email: String! @unique
  password: String!
  role: Role!
  activated: Boolean!
  admindeactivated: Boolean!
  validateEmailToken: String! @unique
  resetPasswordToken: String! @unique
  resetPasswordExpires: Float
  userprofile: UserProfile @relation(name: "UserProfileDetails" onDelete: CASCADE)
  businessprofile: BusinessProfile @relation(name: "BusinessProfileDetails" onDelete: CASCADE)
  files: [File!]! @relation(name: "UserFiles" onDelete: CASCADE)
}

type UserProfile {
  id: ID! @unique
  firstname: String
  lastname: String
  preferredname: String
  phonenumber: String
  user: User! @unique @relation(name: "UserProfileDetails")
  applications: [Application!]! @relation(name: "ApplicationUser" onDelete: CASCADE)
}

type BusinessProfile {
  id: ID! @unique
  name: String
  description: String
  phonenumber: String
  address: String
  website: String
  user: User! @unique @relation(name: "BusinessProfileDetails")
  jobpostings: [JobPosting!]! @relation(name: "JobPostingDetails" onDelete: CASCADE)
}

type File {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  filename: String!
  mimetype: String!
  path: String! @unique
  name: String
  filetype: Filetype!
  storedName: String!
  size: Float!
  user: User! @unique @relation(name: "UserFiles")
}

enum Role {
  ADMIN
  BASEUSER
  BUSINESS
}

enum Filetype {
  RESUME
  COVERLETTER
  PROFILEIMAGE
  TEMP
}

type Location {
  id: ID! @unique
  address: String
  city: String
  region: String
  country: String
  postalcode: String
  jobposting: JobPosting! @unique @relation(name: "JobPostingLocation")
}

type JobPosting {
  id: ID! @unique
  title: String!
  type: PositionType
  duration: Int
  location: Location @relation(name: "JobPostingLocation" onDelete: CASCADE)
  openings: Int
  description: String!
  contactname: String
  salary: Float
  deadline: DateTime!
  coverletter: Boolean
  paytype: PayType
  activated: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  applications: [Application!]! @relation(name: "JobApplications" onDelete: CASCADE)
  businessprofile: BusinessProfile! @unique @relation(name: "JobPostingDetails")
}

enum StatusType {
  PENDING
  ACCEPTED
  REJECTED
}

type Application {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  status: StatusType!
  files: [ApplicationFile!]! @relation(name: "ApplicationFiles" onDelete: CASCADE)
  userprofile: UserProfile! @unique @relation(name: "ApplicationUser")
  jobposting: JobPosting! @unique @relation(name: "JobApplications")
}

enum PositionType {
  FULLTIME
  PARTTIME
}

enum PayType {
  HOURLY
  SALARY
}

type ApplicationFile {
  path: String!
  filename: String!
  filetype: Filetype!
  application: Application! @unique @relation(name: "ApplicationFiles")
}
