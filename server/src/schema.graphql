# import Query.user, Mutation.updateUserProfile from "./generated/prisma.graphql"
# import Role, ID, File, Filetype, UserProfile, BusinessProfile from "./generated/prisma.graphql"

scalar Upload

type Query {
  me: User
}

type Mutation {
  signup(email: String!, password: String!, username: String!, role: Role!, activated: Boolean!, confirmPassword: String!): AuthPayload!
  login(username: String!, password: String!): AuthPayload!
  updateuser(username: String!, email: String!, firstname: String!, lastname: String!, preferredname: String, phonenumber: String!): UserPayload!
  uploadFile (file: Upload!, name: String, filetype: Filetype!, size: Float!, filename: String!, overwrite: Boolean!): UploadPayload!
  updatePassword (username: String!, oldpassword: String!, newpassword: String!, newpassword2: String!): UpdatePasswordPayload!
}

type AuthErrors {
  username: String
  email: String
  password: String
  confirmPassword: String
  login: String
}

type AuthPayload {
  token: String
  user: User
  errors: AuthErrors
}

type UploadErrors {
  fileexists: String
  filetype: String
  filesize: String
}

type UploadPayload {
  file: File
  errors: UploadErrors
}

type UserErrors {
  username: String
  email: String
  firstname: String
  lastname: String
  phonenumber: String
}

type UserPayload {
  user: User
  errors: UserErrors
}

type UpdatePasswordErrors {
  oldpassword: String
  newpassword: String
  newpassword2: String
}

type UpdatePasswordPayload {
  success: Boolean
  errors: UpdatePasswordErrors
}

type User {
  id: ID!
  username: String!
  email: String!
  role: Role!
  userprofile: UserProfile
  businessprofile: BusinessProfile
  files: [File]
}
